import { render, screen } from '@testing-library/react';
import { Provider } from 'react-redux';
import { configureStore } from '@reduxjs/toolkit';
import workflowReducer from '@/store/slices/workflowSlice';
import WorkflowCanvas from './WorkflowCanvas';

// Mock ReactFlow as it's not compatible with Jest DOM environment
jest.mock('reactflow', () => ({
  __esModule: true,
  default: ({ children }: { children: React.ReactNode }) => (
    <div data-testid="mock-react-flow">{children}</div>
  ),
  Background: () => <div data-testid="mock-background" />,
  Controls: () => <div data-testid="mock-controls" />,
  useNodesState: () => [[], jest.fn(), jest.fn()],
  useEdgesState: () => [[], jest.fn(), jest.fn()],
  addEdge: jest.fn(),
}));

describe('WorkflowCanvas', () => {
  const renderWithRedux = () => {
    const store = configureStore({
      reducer: {
        workflow: workflowReducer,
      },
    });

    return render(
      <Provider store={store}>
        <WorkflowCanvas />
      </Provider>
    );
  };

  it('renders ReactFlow component', () => {
    renderWithRedux();
    expect(screen.getByTestId('mock-react-flow')).toBeInTheDocument();
  });

  it('renders Background component', () => {
    renderWithRedux();
    expect(screen.getByTestId('mock-background')).toBeInTheDocument();
  });

  it('renders Controls component', () => {
    renderWithRedux();
    expect(screen.getByTestId('mock-controls')).toBeInTheDocument();
  });
});